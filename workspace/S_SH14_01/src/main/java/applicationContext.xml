<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
   <!-- 개발에 사용하는 Dummy Mail -->
   <bean id="dummyMailSender" class="com.pcwk.ehr.DummyMailSender"></bean>

   <!-- Naver smtp 계정 -->
   <bean id="mailSenderImpl"
      class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.naver.com" />
      <property name="port" value="465" />
      <property name="username" value="이메일" />
      <property name="password" value="비번" />
      <property name="defaultEncoding" value="utf-8" />
      <property name="javaMailProperties">
         <props>
            <prop key="mail.smtp.host">smtp.naver.com</prop>
            <prop key="mail.smtp.port">465</prop>
            <prop key="mail.smtp.auth">true</prop>
            <prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            <prop key="mail.smtp.ssl.enable">true</prop>
            <prop key="mail.smtp.ssl.trust">smtp.naver.com</prop>
            <prop key="mail.debug">true</prop>
         </props>
      </property>
   </bean>


   <!-- JDBC DataSrpirceTransactionManager -->
   <bean id="transactionManager"
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource" />
   </bean>

   <!-- 트랜잭션 어드바이스 설정 -->
   <tx:advice id="txAdvice"
      transaction-manager="transactionManager">
      <tx:attributes>
         <!-- do로 시작하는 모든 메소드는 트랜잭션관리 대상에서 제외 -->
         <tx:method name="do*" read-only="true" />
         <!-- up으로 시작하는 메소드는 트랜잭션관리 대상 -->
         <tx:method name="up*" read-only="false" />
      </tx:attributes>
   </tx:advice>

   <!-- pointcut *Service : com.pcwk.ehr.user.service -->
    <aop:config>
        <aop:pointcut expression="execution(* com.pcwk.ehr..service.*Impl.*(..))" id="txPointCut"/>
        <!-- 트랜잭션 처리를 위한 advisor: advice+pointcut -->
        <aop:advisor advice-ref="txAdvice"
                     pointcut-ref="txPointCut"/>
    </aop:config>

   <!-- JTA : WAS 지원(안됨) -->
   <!-- <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"> 
      <property name="dataSource" ref="dataSource" /> </bean> -->

   <!-- service -->
   <bean id="userService"
      class="com.pcwk.ehr.user.service.UserServiceImpl">
      <property name="userDao" ref="userDao" />
      <property name="dataSource" ref="dataSource" />
      <property name="mailSender" ref="dummyMailSender" />
   </bean>

   <!-- database.properties read -->
   <context:property-placeholder
      location="classpath:/resource/config/database.properties" />

   <!--DataSource를 구현한 SimpleDriverDataSource -->
   <bean id="dataSource"
      class="org.apache.commons.dbcp.BasicDataSource">
      <!-- jdbc 드라이버 -->
      <property name="driverClassName" value="${jdbc.driver}" />
      <!-- jdbc url -->
      <property name="url" value="${jdbc.url}" />
      <!-- username -->
      <property name="username" value="${jdbc.username}" />
      <!-- 비밀번호 -->
      <property name="password" value="${jdbc.password}" />

      <!-- 최대 접속 허용 갯수 -->
      <property name="maxActive" value="${jdbc.maxActive}" />

      <!-- 여분으로 남겨질 Connection -->
      <property name="maxIdle" value="${jdbc.maxIdle}" />
      <!-- DB연결 대기 시간 -->
      <property name="maxWait" value="${jdbc.maxWait}" />
      <!-- Connection 잘못관리되어 버려진 연결 찾아 재활용 -->
      <property name="removeAbandoned"
         value="${jdbc.removeAbandoned}" />
      <!-- 버려진 연결로 인식할 기본 시간 -->
      <property name="removeAbandonedTimeout"
         value="${jdbc.removeAbandonedTimeout}" />
   </bean>

   <!-- dao -->
   <bean id="userDao" class="com.pcwk.ehr.user.dao.UserDaoImpl">
      <!-- setter통한 의존관계 주입 -->
      <property name="dataSource" ref="dataSource" />
   </bean>


</beans>